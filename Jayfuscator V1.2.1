-- Jayfuscator  :  https://discord.gg/W9tSMXu7qk

-- Jayfuscator V1.2.1 --
-- Really Weak -- 
return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bc,bc)local bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq=120,75,80,43,77,27,71,20,76,66,52,55,61,23,72,57,29,25,70,21,67,49,92,16,95,41,47,35,69,93,32,26,58,16,96,76,76,72,93,52,33,35,60,64,88,18,33,57,50,54,13,80 while bc~=73 do if bd<=880 then if bd<=441 then if bd<=218 then if bd<=90 then if bd<87 then be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq=nil bd=90 else bd=139 bx=string.byte end else if bd<=139 then bo=string.char bd=173 else if bd>180 then bd=243 do bi=string.gsub end else bj=string.sub bd=218 end end end else if bd<=321 then if bd<=243 then bd=273 bs=string.rep else if bd<313 then bd=321 do bq=table.concat end else do cd=table.insert end bd=356 end end else if bd>=393 then if bd<436 then bd=441 cb=(getfenv or function()return _ENV end)else cq=setmetatable bd=488 end else be=math.ldexp bd=393 end end end else if bd<=663 then if bd>=585 then if bd>=618 then if bd<656 then bd=663 ca=math.floor else bd=682 cl=(unpack or table.unpack)end else do cn=math.abs end bd=618 end else if bd>=524 then if bd<561 then bg=type bd=570 else bd=585 ci=(function(be,bi,bi)if z==bg(be)then do return true end else return false end end)end else bd=524 bl=select end end else if bd<=767 then if bd>=722 then if bd>730 then bd=814 for z=0,255 do bu[z]=bo(z);end else bd=767 do bu={}end end else bd=722 do ce=tonumber end end else if bd<=814 then Db=function(z,be)do local be={};local bg={};local bi={};local bu=0;for cd=65,90 do bi[bo(cd)]=bu;bu=bu+1;end;for cd=97,122 do bi[bo(cd)]=bu;bu=bu+1;end;for cd=48,57 do bi[bo(cd)]=bu;bu=bu+1;end;bi['+']=bu;bu=bu+1;bi['/']=bu;local bu=1;while bu<=#z do local z=bj(z,bu,bu);if z=='='then break;end;if bi[z]then be[#be+1]=bi[z];end;bu=bu+1;end;for z=1,#be,4 do local bi=be[z]or 0;local bj=be[z+1]or 0;local bu=be[z+2]or 0;local cd=be[z+3]or 0;local bi=bi*262144+bj*4096+bu*64+cd;local bj=ca(bi/65536)%256;local bu=ca(bi/256)%256;local bi=bi%256;bg[#bg+1]=bo(bj);if z+1<=#be then bg[#bg+1]=bo(bu);end;if z+2<=#be then bg[#bg+1]=bo(bi);end;end;return bq(bg);end end;bd=846 else if bd>849 then bd=910 co=Dc('/wQAAf8HAAP/CwAB/wMAAQT/AwBfRU5WAAP/BQAB/wMACgj/CAAcEP8IAAYY/woAA/8DAAP/BgDwPwP/CAAD/wcAQAIg/wUACQAwBBoI/wQADQAwABoQ/wQAC/8DAAQg/wQARgFQAQKI/wQACwAQAAQw/wQAegGQAgKI/wQAEAAwABD/BQAUADAAEAj/BAATAFAADFD/BAA6AIABAlj/BAAMACAAIBj/BAAYAEAAA/8HADAACDD/BAAYAFAAAwj/BAAEADAACDD/BAAIADAACRD/BADyAAAFAhD/BAADABAAB5j/BACuAIAAAqD/BgAwAA4I/wQAC/8DAASw/wQAtgAwAQLw/wQAEAAwABD/BQALAEAABMj/BAAmAJAFAtD/BAAMACAAIBj/BAAUAEAAA/8HADAACCj/BAAIADAACRD/BACOAYAAAqD/BAAM/wMAHBD/CAAGGP8KAAH/AwAD/wYA8D8CBP8FAAj/AwAb/wUACAAQABMQ/wYAEAAXEP8IAAYQAAAV/wMAARj/AwBKRlNfUFJJVkFURV9YT1JfRlVOQ1RJT04D/wYA8L8BBP8DAHR5cGUBBf8DAHRhYmxlAQb/AwBzdHJpbmcBBP8DAGJ5dGUBBP8DAGNoYXIBA/8DAHN1YgEE/wMAZ3N1YgEG/wMAY29uY2F0AQb/AwBpbnNlcnQBBP8DAG1hdGgBBf8DAGxkZXhwAQf/AwBnZXRmZW52AQz/AwBzZXRtZXRhdGFibGUBBv8DAHNlbGVjdAP/BgAxQAP/CAAD/wYA8D8B/wQAAgEBSf8FAAUAoAQaCP8EAAgAIAAL/wUACwAQABUg/wQAGgGgBAIo/wgAHBD/BAAJ/wMAChj/BAAMAHAFDv8FAAgAIAAiEP8EAAsAQAAUUP8EAKYAYAICYP8EAAgAAAQYmAL/AwAI/wMAHBD/BAAJ/wMACij/BAAIAGAACxD/BAAN/wMACij/BAAMAHAACxj/BAAR/wMACij/BAAQAIAACyD/BAAV/wMACij/BAAUAJAACyj/BAAZ/wMACiD/BAAYAKAACzD/BAAd/wMACiD/BAAcALAACzj/BAAh/wMACmD/BAAgANAAC0D/BAAl/wMACnD/BAAn/wMAFuj/BAD+ANACAvD/BAAl/wMAHv8FACn/AwAKeP8EAC3/AwAKgP8EADH/AwAeCP8EADX/AwAeEP8EADkAcAAaiP8EADz/AwAN/wUAQQBwABqQ/wQARQBAAhqY/wQASP8DABv/BQBNALACGpj/BABGAPD/ABIoAv8DAFUA4AAaoP8EAFn/AwAKGP8EAFwAQAEf/wUAWAAgACIQ/wQAWwBQABR4Af8DAF4AEAECkAH/AwBYAEABH/8FADwAYAEXoP8EAD4AUAMCKAL/AwBZAHACGpj/BABcAEABH/8FAFz/AwAbuP8EAGEAwAEamP8EAFoA8P8AEhgC/wMAaACgAQ6o/wQAbACQAA4Y/wQAcADgAQ5g/wQAdADgAg4Q/wQAeABAAR//BQB8APACDsj/BACAAPAFDsj/BAB0ACAAGQAB/wMAeAAQAQ5w/wQAcP8DAA/w/wQAbAAg/wcAVACwAQXQ/wQAWgDw/wABuAH/AwA8AFABF6D/BABGAPD/AAFIAf8DADwAUAEREP8EADz/AwAcEP8IAAYYAAAC/wMAAQX/AwBwcmludAEK/wMAaGVsbG8gZ3V5cwAF/wUAAf8DAB7/BQAF/wMACgj/BAAJADABGhD/BAAEABAAIRD/CAAGGAAA')else bd=880 do Dc=function(z,be,be)local z=Db(z);local be={};local bg=1;while bg<=#z do local bi=bx(z,bg);if bi==255 then bg=bg+1;local bj=bx(z,bg);if bj==0 then be[#be+1]=bo(255);bg=bg+1;else bg=bg+1;local z=bx(z,bg);be[#be+1]=bs(bo(z),bj);bg=bg+1;end;else be[#be+1]=bo(bi);bg=bg+1;end;end;return bq(be);end;end end end end end end else if bd<=1234 then if bd>=1072 then if bd<=1121 then if bd>=1093 then if bd>1102 then bv=(bit_lib and bit_lib.bxor or function(z,be)z=z%(2^32)be=be%(2^32)local bg,bi=0,1 while z>0 and be>c do local c,bj=z%16,be%16 bg=bg+bh[c+1][bj+1]*bi z=(z-c)/16 be=(be-bj)/16 bi=bi*16 end bg=bg+z*bi+be*bi return bg end)bd=1170 else bd=1121 by=function(c,z,be,bg)local bg,bi,bj=49,65,39,97,82,96,36,32,72,52,20,64,18 while bg~=38 do if bi>=157 then if bi>=201 then if bi<224 then bi=232 return bj else break end else bj=(bj-bj%1)bi=201 end else if bi<=65 then bi=99 bj=nil else if bi>108 then bi=157 bj=((z/cf[c])%cf[be])else bi=136 bj=nil end end end end end end else bd=1093 for c=1,31 do cf[c]=ck do ck=(ck*2)end end end else if bd<=1170 then do bn=function(c,z,be,bg,bg)local bg do bg=((c/2^(z-1))%2^((be-1)-(z-1)+1))end do return(bg-bg%1);end end end bd=1206 else if bd<1228 then bd=1234 bw=1 else bz=function()local c,z,be,bg c,z,be,bg=bx(co,bw,(bw+3))bw=(bw+4);return((bg*16777216)+(be*65536)+(z*o)+c);end bd=1267 end end end else if bd>=1004 then if bd<=1004 then bd=1032 do ch=(2^52)end else if bd>1036 then ck=2 bd=1072 else bd=1047 cf={[0]=1}end end else if bd>915 then cj=''bd=1004 else bd=956 do bh={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,r,11,10,13,12,15,14,},{2,3,0,1,6,7,h,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,g,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,j,12,13,p,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,s,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,d,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,w,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,b,4,3,2,1,0,},nil,nil,nil}end end end end else if bd<=1398 then if bd>=1348 then if bd>=1365 then if bd>1367 then bd=1425 bp={}else bm=function(...)do return{...},bl('#',...)end end bd=1398 end else bd=1365 bk=function(b,b,b)local b,c,d,g=55,53,19,12,53,94,89,76,28,17,38,61,30 while b~=34 do if c<=105 then if c<=53 then d,g=nil c=78 else if c<98 then g=bz()c=105 else c=129 do d=co:sub(bw,(bw+g-1))end end end else if c>=166 then if c<198 then c=205 return d;else b=34;end else c=166 bw=(bw+g);end end end end end else if bd<=1267 then bd=1292 bt=function()local b b=bx(co,bw,bw)bw=(bw+1);return b;end else if bd<1309 then bd=1314 cp=function()local b,c b,c=bx(co,bw,(bw+2))bw=(bw+2);return((c*256)+b);end else bd=1348 cm=function()local b,c,d,g,h,j,o,p=66,53,91,64,17,46,20,36,33,97,16,70,65,66,27,15,34,91 while b~=37 do if c>=185 then if c>=274 then if c<=274 then if l==h then if 0~=j then h=1 o=0 else do return(p*0)end end elseif not(h==2047)then else if 0==j then do return(p*(0/0))end else return(p*(1/0))end end c=307 else if c<345 then c=352 return(p*(2^(h-1023))*(j/ch+o))else b=37;end end else if c<=185 then h=by(20,g,11)c=210 else if c>217 then c=274 o=1 else j=(by(0,g,e)*4294967296+d)c=238 end end end else if c>=112 then if c>=133 then if c>135 then c=185 p=((-1)^by(31,g,1))else c=148 if((d==0 and g==u))then return a end end else g=bz()c=133 end else if c>60 then c=112 d=bz()else c=68 d,g,h,j,o,p=nil end end end end end end end end else if bd<=1498 then if bd<=1425 then bf=function(a,b,b,b,b)local b,c,d,e,g,h,j,l=74,60,54,66,42,43,10,71,39,96,99,27,46,95,45,14,38,77,70,85,54,34,95,41 while b~=37 do if c>=303 then if c<=381 then if c<=331 then if c>311 then h={}c=352 else e=bz()c=331 end else if c<379 then c=381 for o=1,e do local p,r,s,u=60,53,54,74,10,82,14,63,13,84,84,42 while p~=27 do if r<=138 then if r>=91 then if r>95 then s=nil r=175 else do u=bt()end r=138 end else r=91 s,u=nil end else if r<=175 then if(not(u~=n))then s=(not(bt()==0));elseif(3==u)then s=cm();elseif(1==u)then s=bk();elseif(y==u)then s=a[bk()];end;r=209 else if r<218 then r=225 do h[o]=s;end else break end end end end end else c=406 j[104]=h end end else if c>=479 then if c>=498 then if c>503 then b=37;else c=521 return j;end else j[88]=l;c=498 end else if c<434 then c=438 j[118]=bt();else c=479 for a=1,bz()do local b,n,o,p,r,s=84,72,97,20,41,44,22,54,60,19,21,38,38,77,26,87,51,21,31,62,43,60,42,39,52,69,47 while b~=49 do if n<=352 then if n>=223 then if n>=283 then if n<=283 then do r=bz()end n=304 else if n<347 then n=352 p=bn(o,1,m)else s[115]=p n=368 end end else if n<253 then while bt()==1 do for b=1,bt()do s[120][b]={bt()==0,bz()}end break end n=260 else n=283 o=bz()end end else if n>=157 then if n<169 then n=174 s[f]=bt();else do s[120]={};end n=223 end else if n>75 then s={{},nil,nil,nil}n=157 else n=118 o,p,r,s=nil end end end else if n>=484 then if n<=503 then if n>486 then n=523 s[20]=-s[168]else s[146]=bn(o,12,20);n=503 end else if n<=523 then s[54]=-s[154]n=555 else if n>564 then break else n=591 l[a]=s;end end end else if n>=418 then if n>423 then s[154]=bn(o,21,29);n=484 else n=439 s[11]=bn(r,12,33);end else if n<396 then s[183]=bn(r,1,11);n=402 else n=418 do s[168]=bn(o,3,11);end end end end end end end end end end else if c<=176 then if c>=131 then if c>135 then c=198 j={}else c=176 g={}end else if c<82 then c=91 d,e,g,h,j,l=nil else l={}c=131 end end else if c<=219 then if c>201 then do for a=(#bp+1),(#bp+d)do local b,e,f,h,l=55,42,98,65,23,56,37,14,61,44,12,31,98,82,40,60,89,19,65,16,87,56,23 while b~=35 do if e>=295 then if e<=379 then if e<=310 then if e<303 then do h[168]=bn(l,v,11);end e=310 else e=355 h[141]=bn(l,12,20);end else if e>361 then h[11]=bn(f,t,33);e=427 else e=379 h[154]=bn(l,21,29);end end else if e<=458 then if e>435 then e=473 h[54]=-h[154]else h[20]=-h[168]e=458 end else if e>482 then b=35;else e=519 bp[a]=h;end end end else if e>=186 then if e>=248 then if e<270 then e=274 do h[115]=bn(l,1,2);end else h[183]=bn(f,1,11);e=295 end else if e<219 then f=bz()e=227 else h[146]=bt();e=248 end end else if e>=118 then if e>127 then e=186 l=bz()else h[102]=bt();e=140 end else if e<68 then f,h,l=nil e=77 else do h={}end e=118 end end end end end end end c=234 else c=219 d=bz()end else if c>236 then j[23]=g;c=303 else do for a=1,bz()do g[a-1]=bf();end end c=282 end end end end end end bd=1454 else if bd>1458 then bd=1542 cc={}else do cg={}end bd=1498 end end else if bd<=1542 then bd=1577 br=function(a,b,b,c,c)local c,d,e,f,g e=a[118]g=a[104]do f=a[88]end c=cg d=a[23]return function(...)local a,c,h,j,l,m,n,o,p p=x m=-1 a=-1 c={}do h={...}end o=(bl('#',...)-1)j={}n={}for a=0,o do do if(not(a<e))then c[(a-e)]=h[(a+1)];else n[a]=h[(a+1)];end;end end;do l=(o-e+1)end while true do local a,c,e,h,l,o,r,s,t,u h=f[p]t=h[183]do a=h[102]end r=h[168]o=h[141]s=h[154]e=h[146]l=h[20]c=h[11]u=h[54]if not(t<17)then if not(t<26)then if not(t<30)then if not(t>31)then if(t>30)then n[r]=n[c][n[s]];else n[r]=br(d[c],nil,b);end else if not(t<33)then do if not(t~=33)then local a a=r n[a](n[(a+1)])else local a a=h[168]n[a]=n[a](n[a+1]);end end else n[r]=(n[h[11]]+n[s]);end end else if not(t<k)then if(t>28)then do g=cg[r](g)end else do return n[r]end end else if(t>26)then n[r]=#n[c];else n[h[168]]=g[c]end end end else if not(h[183]<21)then if not(t<23)then do if not(t<24)then do if(t<25)then do n[r]=nil;end else local a a=r n[a]=n[a](cl(n,a+1,c));end end else do n[h[168]][n[c]]=n[s];end end end else do if 21==t then do if n[r]then p=c;end;end else if not n[h[168]]then p=c;end;end end end else if not(t<19)then if not(h[183]~=19)then n[h[168]]=(n[c]+g[s]);else while(n[r]~=g[s])do p=c;break end end else if(t>17)then local a,d,e d=r a=n[d]e=n[(d+2)]if((e>0))then if((a>n[d+1]))then p=c;else n[(d+3)]=a;end elseif((a<n[d+1]))then p=h[11];else n[(d+q)]=a;end else do n[h[168]][g[c]]=g[s];end end end end end else if not(t>7)then if not(t<4)then if not(t>5)then do if not(t~=4)then if((g[r]<n[s]))then do p=c;end end;else local a,d a=c d=n[a]do for e=(a+1),s do d=(d..n[e]);end;end n[r]=d;end end else if(t>6)then if((n[r]<n[s]))then p=c;end;else local a a={}if(#j>0)then for d=1,#j do local e e=j[d]for d=0,#e do local f,j,k f=e[d]do k=f[1]end j=f[2]if(k==n and j>=0)then a[j]=k[j]f[1]=a end end end end return h[o],t,h[r];end end else if not(h[183]>1)then if not(t~=bb)then local a a=r n[a]=n[a](cl(n,a+1,m));else local a,d,e e=r a=n[(e+2)]do d=(n[e]+a)end n[e]=d;do if((a>0))then while(d<=n[e+1])do p=c;n[e+3]=d;break end elseif(not(d<n[e+1]))then p=c;n[(e+3)]=d;end end end else if 2==h[183]then p=c;else n[r]=(n[c]-n[s]);end end end else if not(t<12)then if not(t<14)then if not(t>14)then n[r]=n[c];else if(t<16)then local a,d,e,f e=r d,f=bm(n[e](cl(n,(e+1),c)))m=(f+e-1)a=0 for f=e,m do a=(a+ba);n[f]=d[a];end;else n[h[168]]=(n[c]%g[s]);end end else if(t>12)then do n[r]={};end else if(not(n[r]==n[h[154]]))then p=c;end;end end else if not(t>i)then if(t>8)then n[r]=(n[c]*g[s]);else n[r]=(n[c]/g[s]);end else if not(h[183]~=10)then n[r]=b[g[c]];else do n[r]=n[c][g[s]];end end end end end end do p=(p+1);end end;end;end else if bd>1581 then bc=73;else bd=1605 do return br(bf(cb()),{},cb())();end end end end end end end end end)(0,5,0,2,20,102,6,4,9,3,28,0,2,2,256,14,3,8,1,12,0,3,14,1,0,'number',1,0)



-- Jayfuscator V1.2.1 --
-- Max Security ( Every Security Option Enabled ) -- 
return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bb,bb)local bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp=93,70,81,67,93,84,72,97,99,92,37,58,65,72,34,51,16,53,69,91,36,15,88,97,54,94,82,14,64,48,22,27,66,75,21,74,15,58,25,59,74,93,81,23,41,82,15,32,67,19,32 while bb~=66 do if bc>=788 then if bc<=1127 then if bc<=926 then if bc>=852 then if bc<=852 then bc=896 ci={[0]=1}else if bc<923 then bc=926 cd=2 else do for cq=1,31 do ci[cq]=cd cd=(cd*2)end end bc=953 end end else if bc<831 then bf=''bc=837 else bn=(2^52)bc=852 end end else if bc>=1048 then if bc<=1048 then bc=1088 cg=1 else if bc>1091 then bc=1171 cj=function()local cq cq=cl(ce,cg,cg)cg=(cg+1);do return cq;end end else do br=function()local cq,cr,cs,ct cs,cr,ct,cq=cl(ce,cg,(cg+3))cg=(cg+4);do return((cq*16777216)+(ct*65536)+(cr*256)+cs);end end end bc=1127 end end else if bc<=953 then bc=981 do bo=function(cq,cr,cs,ct)local ct,cu,cv=53,54,99,51,45,43,94,56,16,78,43,30,26,98,49 while ct~=41 do if cu>=170 then if cu<=170 then cv=(cv-cv%1)cu=219 else if cu>225 then ct=41;else cu=239 return cv end end else if cu<=54 then cv=nil cu=95 else if cu>102 then cu=170 cv=((cr/ci[cq])%ci[cs])else cu=126 cv=nil end end end end end end else if bc<1003 then do cb=(bit_lib and bit_lib.bxor or function(cq,cr)cq=cq%(2^32)cr=cr%(2^32)local cs,ct=0,1 while cq>0 and cr>c do local c,cu=cq%16,cr%16 cs=cs+co[c+1][cu+1]*ct cq=(cq-c)/16 cr=(cr-cu)/b ct=ct*16 end cs=cs+cq*ct+cr*ct return cs end)end bc=1009 else bc=1048 bu=function(b,c,cq,cr,cr)local cr cr=((b/2^(c-1))%2^((cq-1)-(c-1)+1))return(cr-cr%1);end end end end end else if bc>=1305 then if bc>=1388 then if bc>=1423 then if bc<1446 then bc=1455 return cp(cn(bg()),{},bg())();else bb=66;end else cp=function(b,c,bb,cq,cq)local cq,cr,cs,ct,cu cu=b[143]cr=b[149]cs=bi ct=b[64]do cq=b[w]end return function(...)local b,w,cs,cv,cw,cx,cy,cz,da cy=1 cz=-1 w=-1 cs={}b={...}cw=(cf('#',...)-1)cv={}da={}for w=0,cw do if(not(w<ct))then cs[(w-ct)]=b[(w+1)];else da[w]=b[(w+1)];end;end;do cx=(cw-ct+1)end while true do local w,cx,db,dc,dd,de,df,dg,dh,di df=cu[cy]w=df[161]dg=df[52]dh=df[158]dc=df[49]dd=df[194]de=df[193]di=df[38]do db=df[n]end cx=df[46]if not(w<43)then if not(w>63)then if not(w>52)then if not(w>47)then if not(w>44)then do if not(df[161]~=43)then if(not(da[dh]<da[dd]))then cy=db;end;else if dh then dh=false;dd=db;cy=(cy-1);else do cy=(cy+db+dd);end end end end else if not(w>45)then cz=df[dh];else do if not(w~=46)then da[dh]=(da[db]-da[dd]);else da[dh]=cr[db]end end end end else if not(w>49)then if(w<49)then else do do return da[dh]end end end else if not(w>50)then if((da[dh]>da[dd]))then cy=db;end;else if(df[161]<52)then if not da[dh]then cy=db;end;else do da[dh]=bb[cr[df[31]]][cr[dd]];end end end end end else if not(df[161]<58)then if not(w>60)then if not(df[161]>58)then da[dh]=#da[db];else if(w>59)then cu[cy]={[31]=2,[158]=2,[194]=3,[161]=w-27,[193]=0};cy=(cy-1);else da[df[158]]=(da[db]*da[df[194]]);end end else do if not(w<62)then if not(w~=62)then do while(da[dh]~=cr[df[194]])do cy=df[31];break end end else do do return da[di][de]end end end else local n n=dh do return bz(da,n,(n+db))end;end end end else if not(w>54)then if(w>53)then do cu[cy]=by[de];end cy=db;else da[dh]=da[db];end else if not(w<56)then if(w>56)then if((cr[dh]<da[dd]))then do cy=db;end end;else c[db]=da[dh];end elseif not da[dd]then da[dh]=da[dd];cy=db;end end end end else if not(w>74)then if not(df[ba]<69)then if not(w<72)then if not(w<73)then if 73==w then for n=dh,db do da[n]=nil;end;else local n n=dh da[n]=da[n](bz(da,n+1,cz));end else bi[dh]=da[dc]end else if not(w>69)then local n,ba,dg ba=dh dg={da[ba](bz(da,ba+1,db))}n=0 for dj=ba,dd do n=(n+1);da[dj]=dg[n];end else if(w<71)then local n,ba,dg,dj,dk n=dh dg=df[194]dj=(n+2)ba={da[n](da[n+1],da[dj])}for dl=j,dg do da[(dj+dl)]=ba[dl]end dk=da[(n+3)]if dk then da[dj]=dk else cy=db;end;else do da[dh]=(0~=db);end cy=(cy+1);end end end else if not(w>65)then if(w>64)then da[dh]=cp(cq[db],nil,bb);else local j j=dh do da[j]=da[j](bz(da,j+1,db));end end else if not(w>66)then do da[cx]=(function()da[dh]=cp(cq[dc],nil,bb);end)end else if(w>67)then da[df[46]]=(function()da[dh]=cp(cq[dc],nil,bb);end)else end end end end else if not(df[161]<80)then if not(w<83)then if not(w<84)then if 84==df[161]then do da[dh]=(da[db]^da[dd]);end else bi=da end else bi[dh]=bi[dc]end else do if not(w<81)then if 81==w then da[dh][cr[df[31]]]=cr[dd];else da[dh]=da[df[31]]end else do da[dh]={};end end end end else if not(w>76)then if(w<76)then da={};for j=0,cw do if(j<ct)then da[j]=b[(j+1)];else break end;end;else da[dh]=da[db][cr[dd]];end else if not(w>77)then do da[dh]=bi[dc]end else if(w<79)then da[cx]();else da[dh]=(da[db]+cr[dd]);end end end end end end else do if not(w>20)then if not(w<10)then if not(df[161]<15)then if not(w<18)then if not(w>18)then if(da[dd]~=da[dh])then do cy=db;end end;else do if(w>19)then da[dh][da[df[31]]]=da[dd];else local b,j j=df[31]b=da[j]for n=(j+1),dd do do b=(b..da[n]);end end;da[dh]=b;end end end else if not(df[161]<16)then if 16==w then local b b=da[di][de]da[di][de]=(b..da[df[194]]);else local b,j b=dh j=db for n=b,j do do da[n]=cs[(n-b)];end end;end else do cr=bi[dh](cr)end end end else do if not(w>11)then do if(w>10)then local b b={}while#cv>0 do for j=1,#cv do local j=cv[j]for n=0,#j do local j=j[n]local n=j[1]local ba=j[2]if n==da and ba>=0 then b[ba]=n[ba]j[1]=b end end end break end return w,df[dh];else local b do b=dh end do do do return da[b](bz(da,(b+1),db))end end;end end end else if not(w>12)then local b,j j=dh do b={}end do if(#cv>0)then for n=k,#cv do local k k=cv[n]do for n=0,#k do local ba,cq,cs do cq=k[n]end cs=cq[1]ba=cq[2]do while cs==da and ba>=0 do b[ba]=cs[ba]cq[1]=b break end end end end end end end do return bz(da,j,cz);end else if 13==w then else if da[df[158]]then cy=db;end;end end end end end else if not(w<5)then if not(w>6)then if 5==w then bi[dh]()else do bi[dh]={}end end else if not(w>7)then cu[cy]=by[de];cy=db;else if(w<9)then local b do b=dh end da[b](da[(b+1)])else local b,j do j=dh end b=da[db]da[(j+1)]=b;da[j]=b[da[dd]];end end end else if not(w>1)then do if(df[161]<1)then da[dh]=(da[db]/da[dd]);else do da[dh]=(da[db]%da[dd]);end end end else if not(w<3)then do if not(w~=3)then da[df[158]]=nil;else da[df[158]]=c[db];end end else local b,c,j,k j=df[158]c,b=bx(da[j](bz(da,(j+1),db)))cz=(b+j-1)do k=0 end for b=j,cz do k=(k+1);da[b]=c[k];end;end end end end else if not(w<32)then if not(w>36)then if not(w<34)then if not(w<35)then do if 35==w then local b,c,j do j=dh end c=da[(j+2)]do b=(da[j]+c)end da[j]=b;if((c>0))then do if(not(b>da[j+1]))then cy=db;da[(j+3)]=b;end end elseif(not(b<da[j+1]))then do cy=db;end da[(j+3)]=b;end else cy=((cr[df[158]]<da[dd])and db or cy)end end else da[dh]=bb[cr[db]];end else if(w>32)then da[dh]=(da[db]*cr[df[194]]);else bb=da[df[dh]]end end else if not(w<40)then if not(w<41)then if 41==w then da[dh]=bi[dc]else da[df[158]]=-da[db];end else local b,c do c=dh end b={}if(#cv>0)then do for j=1,#cv do local k k=cv[j]for j=0,#k do local n,ba,cq n=k[j]cq=n[1]ba=n[2]if(cq==da and ba>=0)then b[ba]=cq[ba]n[1]=b end end end end end return da[c],da[(c+1)]end else if not(w>37)then cy=df[31];else if(w<39)then da[dh]=(not da[df[31]]);else da[df[158]]=(da[db]%cr[dd]);end end end end else do if not(w<26)then if not(w<29)then if not(w<30)then if not(w~=30)then local b,c do b,c=bx(...)end for c=i,df[158]do da[(c-1)]=b[c]end else do da[dh]=(da[db]/cr[dd]);end end else da[df[158]]=(da[db]+da[dd]);end else if not(w>26)then local b,c do c=dh end b={}for i=1,#cv do local j j=cv[i]for i=0,#j do local k,n,ba do k=j[i]end n=k[1]ba=k[2]while(n==da and ba>=c)do b[ba]=n[ba];k[1]=b;break end end;end;else if(w<28)then da[df[df[158]]]=da elseif((da[df[158]]<da[df[194]]))then cy=db;end end end else do if not(w>22)then if(w<22)then da[df[158]]=da[db][da[df[h]]];else local b do b=dh end do da[b]=da[b](da[b+1]);end end else do if not(w>23)then local b,c,h,i c=dh b=((dd-1)*50)i=da[c]h=db for j=e,h do i[(b+j)]=da[(c+j)]end;else if(df[161]>24)then local b,c,e e=df[158]c=da[e]b=da[(e+2)]if((b>0))then if((c>da[e+1]))then cy=db;else da[(e+p)]=c;end elseif((c<da[e+1]))then do cy=df[31];end else da[(e+3)]=c;end else bb[cr[db]]=da[dh];end end end end end end end end end end end cy=(cy+1);end;end;end bc=1423 end else if bc<=1305 then do cn=function(b,c,c,c)local c,e,h,i,j,k,n,p=53,50,44,36,60,47,89,76,99,98,59,53,55,60,68,12,46,92,76,56,58,95,59 while c~=40 do if e>=311 then if e>=425 then if e>=482 then if e<=482 then e=518 k[164]=n;else if e>523 then c=40;else e=562 return k;end end else if e<438 then k[u]=i;e=447 else for c=1,br()do do n[c-1]=cn();end end e=482 end end else if e>=351 then if e<388 then e=394 k[149]=h else e=425 for c=1,br()do local u,w,ba,bb,cq,cr=78,60,42,76,95,32,64,58,46,77,44,46,28,39,33,52,94,92,12,58,47,49,97,62,53 while u~=38 do if w>=386 then if w>=512 then if w<=537 then if w>514 then w=583 bb[38]=-bb[158]else bb[193]=bu(ba,12,20);w=537 end else if w<=583 then bb[46]=-bb[194]w=631 else if w<642 then w=648 i[c]=bb;else break end end end else if w>=444 then if w<473 then w=482 bb[31]=bu(cr,12,33);else bb[f]=bu(ba,21,29);w=512 end else if w<404 then do bb[161]=bu(cr,1,11);end w=409 else w=444 do bb[158]=bu(ba,3,11);end end end end else if w<=172 then if w<=87 then if w<85 then ba,bb,cq,cr=nil w=87 else do bb={{},nil}end w=131 end else if w<163 then w=172 bb[52]=cj();else w=217 bb[57]={};end end else if w>=272 then if w>=304 then if w<335 then w=342 cq=bu(ba,1,2)else w=386 bb[87]=cq end else w=304 cr=br()end else if w>221 then ba=br()w=272 else if not(cj()~=1)then for c=1,cj()do bb[57][c]={cj()==0,br()}end end w=240 end end end end end end end else if e<319 then e=328 h={}else e=351 for c=1,p do local f,u,w,ba=77,48,76,99,29,85,59,67,53,16,63,82,41,36 while f~=29 do if u>=126 then if u>=156 then if u<167 then u=175 h[c]=ba;else f=29;end else u=156 do if(not(w~=0))then do ba=(0~=cj());end elseif(not(w~=1))then ba=bv();elseif(4==w)then ba=bd();elseif(3==w)then ba=b[bd()];end;end end else if u<=48 then u=81 w,ba=nil else if u<99 then u=102 w=cj()else do ba=nil end u=126 end end end end end end end end else if e<=125 then if e>=105 then if e<121 then n={}e=125 else e=172 k={}end else if e>53 then e=105 i={}else e=80 h,i,j,k,n,p=nil end end else if e<=213 then if e<210 then j=br()e=213 else for b=(#by+1),(#by+j)do local c,f,h,i,j=86,38,40,24,70,14,86,93,61,54,57,98,57,52,51,99,55,49,77,14,48,14,42 while c~=41 do if f<=318 then if f>=196 then if f>=279 then if f<315 then j[87]=bu(i,1,2);f=318 else f=359 j[161]=bu(h,1,11);end else if f>203 then j[193]=cj();f=279 else h=br()f=244 end end else if f<=83 then if f<79 then f=83 h,i,j=nil else f=130 j={}end else if f>138 then i=br()f=196 else f=166 j[52]=cj();end end end else if f>=468 then if f<=511 then if f<509 then j[38]=-j[158]f=511 else j[46]=-j[194]f=538 end else if f>545 then break else f=565 by[b]=j;end end else if f>=421 then if f>426 then do j[31]=bu(h,12,33);end f=468 else f=441 j[194]=bu(i,21,29);end else if f<384 then j[158]=bu(i,3,11);f=389 else j[49]=bu(i,12,s);f=421 end end end end end end e=248 end else if e>252 then e=311 p=br()else k[64]=cj();e=273 end end end end end end end bc=1337 else if bc>1341 then bc=1388 do cc={}end else bc=1369 bi={}end end end else if bc>=1219 then if bc<=1219 then bc=1240 bd=function(b,b,b,b)local b,c,e,f=63,69,90,53,51,20,98,26,42,67,65,79 while b~=44 do if c<=135 then if c<=69 then c=87 e,f=nil else if c>96 then e=ce:sub(cg,(cg+f-1))c=163 else c=135 f=br()end end else if c<=163 then c=199 cg=(cg+f);else if c>205 then b=44;else c=241 return e;end end end end end else if bc<1268 then bx=function(...)return{...},cf('#',...)end bc=1271 else bc=1305 by={}end end else if bc<1195 then ca=function()local b,c b,c=cl(ce,cg,(cg+2))cg=(cg+2);return((c*t)+b);end bc=1199 else bv=function()local b,c,e,f,h,i,j,k=48,71,21,43,79,27,69,41,49,44,75,97,60,28,13,16,76,57 while b~=38 do if c<=183 then if c<=89 then if c>77 then c=120 f=br()else c=89 e,f,h,i,j,k=nil end else if c<=120 then e=br()c=138 else if c>147 then c=209 i=((-1)^bo(31,e,1))else c=183 if((f==0 and e==0))then do return 0 end end end end end else if c>=284 then if c>=321 then if c<339 then c=346 return(i*(2^(h-1023))*(j/bn+k))else b=38;end else if 0==h then if not(j==0)then h=1 k=0 else do return(i*0)end end elseif not(h==2047)then else if not(j~=0)then do do do return(i*(0/0))end end end else return(i*(1/0))end end c=321 end else if c>=227 then if c>229 then c=284 k=1 else c=267 j=(bo(0,e,20)*4294967296+f)end else c=227 h=bo(20,e,11)end end end end end bc=1219 end end end end else if bc<=370 then if bc>=201 then if bc>=313 then if bc>=354 then if bc<363 then do bg=(getfenv or function()return _ENV end)end bc=370 else bc=415 do ck=setmetatable end end else be=math.ldexp bc=354 end else if bc<=201 then bc=233 do bk=string.rep end else if bc>242 then do bt=table.insert end bc=313 else bh=table.concat bc=269 end end end else if bc>=109 then if bc>=158 then if bc>167 then bs=string.gsub bc=201 else bj=string.sub bc=181 end else do bq=string.char end bc=158 end else if bc<77 then bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp=nil bc=85 else cl=string.byte bc=109 end end end else if bc>=584 then if bc>=684 then if bc<=684 then bc=704 for b=0,255 do bm[b]=bq(b);end else if bc>712 then bc=788 do co={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{g,2,q,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,d,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,v,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,m,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,o,4,},{12,13,14,15,8,9,10,11,z,5,6,7,r,1,2,3,},{y,l,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,x,11,10,9,8,7,a,5,4,3,2,1,0,},nil,nil,nil}end else bc=744 ce=bsfunction(a,b,b)return bm[cm(a,16)]end)end end else if bc>=608 then if bc>612 then bc=684 bm={}else cm=tonumber bc=638 end else bz=(unpack or table.unpack)bc=608 end end else if bc>=480 then if bc<=480 then bc=527 bw=(function(a,b,b)if not(bp(a)~='number')then return true else return false end end)else if bc>535 then ch=math.floor bc=584 else bc=552 bl=math.abs end end else if bc<450 then cf=select bc=452 else bp=type bc=480 end end end end end end end)(6,16,0,0,1,194,3,194,1,1,1,12,15,31,5,3,1,0,20,256,143,0,164,12,13,4,161)
